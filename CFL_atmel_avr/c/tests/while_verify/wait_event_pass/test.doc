pass_c([[
static void run_while_event_normal_test_b(Handle_config_CFL_t* config_handle) {
]])

 Conf_engine([[config_handle]],50000,4000)
 Def_columns([[column_names]],{ [["wait_event"]], [["generate_event"]] })
 
  Generate_event([[my_event_data]],[[23]],[[45]],[[NULL]])

  Start_column([["generate_event"]],true)
  Wait_delay(1000)
  Send_event([[&my_event_data]])
  Log_msg([["event has been sent"]])
  Reset_column()
  End_column()

   Comment("This column has a time out but still should complete before timeout ")
   Start_column([["wait_event"]],true)
  Log_msg([["waiting for event"]])
  Wait_event_time_out_reset([[23]],[[10]],[[50000]],[[NULL]],[[NULL]])
  Log_msg([["Wait Event is Done"]])
  Stop_engine()
  End_column()

  
pass_c([[

  Start_engine_CFL(input, 100, 30, default_idle_function, default_calendar_function);

  Printf_CFL("Engine Done\n");
  Destroy_engine_CFL(input);
 
}

