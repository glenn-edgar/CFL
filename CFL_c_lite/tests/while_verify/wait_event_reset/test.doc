Conf_engine([[config_handle]],50000,4000)
  Def_columns([[column_names]],{[["terminate_engine"]], [["wait_event"]], [["generate_event"]] })
  Generate_event([[my_event_data]],[[23]],[[45]],[[NULL]])

  Store_one_shot([["test_while_time_out"]],[[test_while_time_out]])



  Start_column([["terminate_engine"]],true)
  Wait_delay(10000)
  Log_msg([["terminate_engine"]])
  Stop_engine()
  End_column()
  
  Start_column([["generate_event"]],true)
  Wait_delay(1000)
  Send_event([[&my_event_data]])
  Log_msg([["event has been sent"]])
  Reset_column()
  End_column()

  Comment("This column has a time out but will not complete and generate a reset")
  Start_column([["wait_event"]],true)
  Log_msg([["column is starting should terminate"]])
  Wait_event_time_out_terminate([[23]],[[10]],[[2000]],[["test_while_time_out"]],[[(void*)test_while_time_out_data]])
  Log_msg([["Wait Event is Done"]])
  Term_column()
  End_column()

pass_c([[
  Start_engine_CFL(input, 100, 30, default_idle_function, default_calendar_function);

  Printf_CFL("Engine Done \n");
  Destroy_engine_CFL(input);
  
