
pass_c([[

#include "test_column_events.h"
#include "CFL_user_functions.h"
#include "test_interface_functions.h"

static void column_event_test(Handle_config_CFL_t* config_handle);


void test_column_events(void) {



  Handle_config_CFL_t* config_handle = Create_config_handle_CFL(debug_write);

  Printf_CFL("test_allocation");
 Printf_CFL("Freemem %d \n",freeMemory());

  config_handle->number_of_columns = 30;
  config_handle->number_of_column_elements = 300;

  config_handle->number_column_functions = 100;
  config_handle->number_bool_functions = 50;
  config_handle->number_if_functions = 50;
  config_handle->one_shot_functions = 50;
  config_handle->number_of_try_functions = 50;

  column_event_test(config_handle);
  
}
]])
column_event_fn = 'column_event_one_shot'
reset_template_tables()
variable_table['fn'] = column_event_fn
pass_c([[
  static void <<p fn>>(void *input,void *param,Event_data_CFL_t *event_data){
    if(event_data->event_index == EVENT_INIT_CFL){
      ;

    }
    if(event_data->event_index == EVENT_TERMINATION_CFL){
      ;
    }
    Event_data_CFL_t *column_event = Get_current_column_local_event_CFL(input);
    Printf_CFL("user data for column_event_test %s \n",(char *)column_event->params);


  }
]])

column_event_fn = 'column_event_one_shot'
column_event_handler = q('column_event_handler')
column_name = q('column_event_test')
Start_function('column_event_test')
  
Conf_engine('config_handle',50000,4000)
Def_columns('column_names',{ column_name }) 


local event_1 =  12
Generate_event('column_event_test',event_1,45.2,'(void*)'..q('this is the column event test'))
Store_one_shot(column_event_handler,column_event_fn)
local column_event_address = '&column_event_test' 

Start_column(column_name,true)
  Log_msg(q('starting column_event_test'))
  Store_column_event(column_event_address)
  One_shot(column_event_handler,'NULL')
  Log_msg(q('ending column_event_test'))
  Term_column()
End_column()

Start_engine( 100, 30, 'default_idle_function', 'default_calendar_function');
Destroy_engine(input, 'Engine Done\\n');
