pass_c([[
#include "test_state_machine.h"
#include "Cfl_user_functions.h"
#include "test_interface_functions.h"


static void test_state_machine(Handle_config_CFL_t* config_handle);


void test_state_machine(void) {





  Handle_config_CFL_t* config_handle = Create_config_handle_CFL(debug_write);

  Printf_CFL("column control test\n");
  

  config_handle->number_of_columns = 30;
  config_handle->number_of_column_elements = 300;

  config_handle->number_column_functions = 100;
  config_handle->number_bool_functions = 50;
  config_handle->number_if_functions = 50;
  config_handle->one_shot_functions = 50;
  config_handle->number_of_try_functions = 50;
  config_handle->number_of_state_machines = 10;



  



  test_state_machine(config_handle);
 
  free(config_handle);
}
]])

Start_function('test_state_machine')
Conf_engine('config_handle','200000','2500')
start_column_names = {'start_column'}
Def_columns('start_column_names',start_column_names)


Start_column('start_column',true)
  Log_msg('start column')
  --Enable_columns('sm1_start_column',true)
  -- enable sm1
  Wait_delay(10000)
  Log_msg("terminating engine")
  Term_column()  
End_column() -- No active columns engine will terminate

dofile("test.inc")

Start_engine( 100, 30, 'default_idle_function', 'default_calendar_function')
Destroy_engine('done with test_state_machine')

